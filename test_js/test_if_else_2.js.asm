0000000000 : nop
0000000000 : var a
0000000003 : test 61
0000000005 : oper 61
0000000007 : data 27
0000000016 : ends
0000000017 : var b
0000000020 : test 61
0000000022 : oper 61
0000000024 : data 0
0000000033 : ends
0000000034 : ends
0000000000 : var a
0000000003 : test 62
0000000005 : oper 62
0000000007 : data 30
0000000016 : endf 0
0000000054 : jz 7, 25
0000000059 : ends
0000000000 : var a
0000000003 : test 242
0000000005 : oper 242
0000000007 : data 30
0000000016 : endf 0
0000000079 : jmp 28, 100
0000000084 : ends
0000000000 : var a
0000000003 : test 62
0000000005 : oper 62
0000000007 : data 20
0000000016 : endf 0
0000000104 : jz 7, 25
0000000109 : ends
0000000000 : var a
0000000003 : test 242
0000000005 : oper 242
0000000007 : data 20
0000000016 : endf 0
0000000129 : jmp 14, 50
0000000134 : ends
0000000000 : var a
0000000003 : test 62
0000000005 : oper 62
0000000007 : data 10
0000000016 : endf 0
0000000154 : jz 7, 25
0000000159 : ends
0000000000 : var a
0000000003 : test 242
0000000005 : oper 242
0000000007 : data 10
0000000016 : endf 0
0000000179 : jmp 0, 0
0000000184 : ends
0000000185 : ends
0000000186 : ends
0000000000 : var a
0000000003 : test 62
0000000005 : oper 62
0000000007 : data 0
0000000016 : test 245
0000000018 : oper 245
0000000020 : oper 33
0000000022 : var b
0000000025 : endf 0
0000000215 : jz 11, 37
0000000220 : ends
0000000000 : func print
0000000007 : data 1
0000000016 : test 41
0000000018 : test 44
0000000020 : oper 44
0000000022 : return
0000000023 : oper 249
0000000025 : var a
0000000028 : endf 0
0000000252 : jmp 4, 8
0000000257 : ends
0000000000 : return
0000000001 : var a
0000000004 : endf 0
0000000265 : ends
0000000266 : endf 0
